/*
 * Sources Internal
 *
 * Sources Internal
 *
 * API version: 2.0.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapiinternal

import (
	"encoding/json"
	"time"
)

// Source struct for Source
type Source struct {
	AppCreationWorkflow *string `json:"app_creation_workflow,omitempty"`
	AvailabilityStatus *string `json:"availability_status,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ID of the resource
	Id *string `json:"id,omitempty"`
	Imported *string `json:"imported,omitempty"`
	LastAvailableAt *time.Time `json:"last_available_at,omitempty"`
	LastCheckedAt *time.Time `json:"last_checked_at,omitempty"`
	Name *string `json:"name,omitempty"`
	SourceRef *string `json:"source_ref,omitempty"`
	// ID of the resource
	SourceTypeId *string `json:"source_type_id,omitempty"`
	Uid *string `json:"uid,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Version *string `json:"version,omitempty"`
	PausedAt *time.Time `json:"paused_at,omitempty"`
}

// NewSource instantiates a new Source object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSource() *Source {
	this := Source{}
	return &this
}

// NewSourceWithDefaults instantiates a new Source object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceWithDefaults() *Source {
	this := Source{}
	return &this
}

// GetAppCreationWorkflow returns the AppCreationWorkflow field value if set, zero value otherwise.
func (o *Source) GetAppCreationWorkflow() string {
	if o == nil || o.AppCreationWorkflow == nil {
		var ret string
		return ret
	}
	return *o.AppCreationWorkflow
}

// GetAppCreationWorkflowOk returns a tuple with the AppCreationWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetAppCreationWorkflowOk() (*string, bool) {
	if o == nil || o.AppCreationWorkflow == nil {
		return nil, false
	}
	return o.AppCreationWorkflow, true
}

// HasAppCreationWorkflow returns a boolean if a field has been set.
func (o *Source) HasAppCreationWorkflow() bool {
	if o != nil && o.AppCreationWorkflow != nil {
		return true
	}

	return false
}

// SetAppCreationWorkflow gets a reference to the given string and assigns it to the AppCreationWorkflow field.
func (o *Source) SetAppCreationWorkflow(v string) {
	o.AppCreationWorkflow = &v
}

// GetAvailabilityStatus returns the AvailabilityStatus field value if set, zero value otherwise.
func (o *Source) GetAvailabilityStatus() string {
	if o == nil || o.AvailabilityStatus == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityStatus
}

// GetAvailabilityStatusOk returns a tuple with the AvailabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetAvailabilityStatusOk() (*string, bool) {
	if o == nil || o.AvailabilityStatus == nil {
		return nil, false
	}
	return o.AvailabilityStatus, true
}

// HasAvailabilityStatus returns a boolean if a field has been set.
func (o *Source) HasAvailabilityStatus() bool {
	if o != nil && o.AvailabilityStatus != nil {
		return true
	}

	return false
}

// SetAvailabilityStatus gets a reference to the given string and assigns it to the AvailabilityStatus field.
func (o *Source) SetAvailabilityStatus(v string) {
	o.AvailabilityStatus = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Source) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Source) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Source) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Source) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Source) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Source) SetId(v string) {
	o.Id = &v
}

// GetImported returns the Imported field value if set, zero value otherwise.
func (o *Source) GetImported() string {
	if o == nil || o.Imported == nil {
		var ret string
		return ret
	}
	return *o.Imported
}

// GetImportedOk returns a tuple with the Imported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetImportedOk() (*string, bool) {
	if o == nil || o.Imported == nil {
		return nil, false
	}
	return o.Imported, true
}

// HasImported returns a boolean if a field has been set.
func (o *Source) HasImported() bool {
	if o != nil && o.Imported != nil {
		return true
	}

	return false
}

// SetImported gets a reference to the given string and assigns it to the Imported field.
func (o *Source) SetImported(v string) {
	o.Imported = &v
}

// GetLastAvailableAt returns the LastAvailableAt field value if set, zero value otherwise.
func (o *Source) GetLastAvailableAt() time.Time {
	if o == nil || o.LastAvailableAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAvailableAt
}

// GetLastAvailableAtOk returns a tuple with the LastAvailableAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetLastAvailableAtOk() (*time.Time, bool) {
	if o == nil || o.LastAvailableAt == nil {
		return nil, false
	}
	return o.LastAvailableAt, true
}

// HasLastAvailableAt returns a boolean if a field has been set.
func (o *Source) HasLastAvailableAt() bool {
	if o != nil && o.LastAvailableAt != nil {
		return true
	}

	return false
}

// SetLastAvailableAt gets a reference to the given time.Time and assigns it to the LastAvailableAt field.
func (o *Source) SetLastAvailableAt(v time.Time) {
	o.LastAvailableAt = &v
}

// GetLastCheckedAt returns the LastCheckedAt field value if set, zero value otherwise.
func (o *Source) GetLastCheckedAt() time.Time {
	if o == nil || o.LastCheckedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastCheckedAt
}

// GetLastCheckedAtOk returns a tuple with the LastCheckedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetLastCheckedAtOk() (*time.Time, bool) {
	if o == nil || o.LastCheckedAt == nil {
		return nil, false
	}
	return o.LastCheckedAt, true
}

// HasLastCheckedAt returns a boolean if a field has been set.
func (o *Source) HasLastCheckedAt() bool {
	if o != nil && o.LastCheckedAt != nil {
		return true
	}

	return false
}

// SetLastCheckedAt gets a reference to the given time.Time and assigns it to the LastCheckedAt field.
func (o *Source) SetLastCheckedAt(v time.Time) {
	o.LastCheckedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Source) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Source) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Source) SetName(v string) {
	o.Name = &v
}

// GetSourceRef returns the SourceRef field value if set, zero value otherwise.
func (o *Source) GetSourceRef() string {
	if o == nil || o.SourceRef == nil {
		var ret string
		return ret
	}
	return *o.SourceRef
}

// GetSourceRefOk returns a tuple with the SourceRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetSourceRefOk() (*string, bool) {
	if o == nil || o.SourceRef == nil {
		return nil, false
	}
	return o.SourceRef, true
}

// HasSourceRef returns a boolean if a field has been set.
func (o *Source) HasSourceRef() bool {
	if o != nil && o.SourceRef != nil {
		return true
	}

	return false
}

// SetSourceRef gets a reference to the given string and assigns it to the SourceRef field.
func (o *Source) SetSourceRef(v string) {
	o.SourceRef = &v
}

// GetSourceTypeId returns the SourceTypeId field value if set, zero value otherwise.
func (o *Source) GetSourceTypeId() string {
	if o == nil || o.SourceTypeId == nil {
		var ret string
		return ret
	}
	return *o.SourceTypeId
}

// GetSourceTypeIdOk returns a tuple with the SourceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetSourceTypeIdOk() (*string, bool) {
	if o == nil || o.SourceTypeId == nil {
		return nil, false
	}
	return o.SourceTypeId, true
}

// HasSourceTypeId returns a boolean if a field has been set.
func (o *Source) HasSourceTypeId() bool {
	if o != nil && o.SourceTypeId != nil {
		return true
	}

	return false
}

// SetSourceTypeId gets a reference to the given string and assigns it to the SourceTypeId field.
func (o *Source) SetSourceTypeId(v string) {
	o.SourceTypeId = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Source) GetUid() string {
	if o == nil || o.Uid == nil {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetUidOk() (*string, bool) {
	if o == nil || o.Uid == nil {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Source) HasUid() bool {
	if o != nil && o.Uid != nil {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *Source) SetUid(v string) {
	o.Uid = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Source) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Source) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Source) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Source) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Source) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Source) SetVersion(v string) {
	o.Version = &v
}

// GetPausedAt returns the PausedAt field value if set, zero value otherwise.
func (o *Source) GetPausedAt() time.Time {
	if o == nil || o.PausedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.PausedAt
}

// GetPausedAtOk returns a tuple with the PausedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetPausedAtOk() (*time.Time, bool) {
	if o == nil || o.PausedAt == nil {
		return nil, false
	}
	return o.PausedAt, true
}

// HasPausedAt returns a boolean if a field has been set.
func (o *Source) HasPausedAt() bool {
	if o != nil && o.PausedAt != nil {
		return true
	}

	return false
}

// SetPausedAt gets a reference to the given time.Time and assigns it to the PausedAt field.
func (o *Source) SetPausedAt(v time.Time) {
	o.PausedAt = &v
}

func (o Source) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppCreationWorkflow != nil {
		toSerialize["app_creation_workflow"] = o.AppCreationWorkflow
	}
	if o.AvailabilityStatus != nil {
		toSerialize["availability_status"] = o.AvailabilityStatus
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Imported != nil {
		toSerialize["imported"] = o.Imported
	}
	if o.LastAvailableAt != nil {
		toSerialize["last_available_at"] = o.LastAvailableAt
	}
	if o.LastCheckedAt != nil {
		toSerialize["last_checked_at"] = o.LastCheckedAt
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SourceRef != nil {
		toSerialize["source_ref"] = o.SourceRef
	}
	if o.SourceTypeId != nil {
		toSerialize["source_type_id"] = o.SourceTypeId
	}
	if o.Uid != nil {
		toSerialize["uid"] = o.Uid
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.PausedAt != nil {
		toSerialize["paused_at"] = o.PausedAt
	}
	return json.Marshal(toSerialize)
}

type NullableSource struct {
	value *Source
	isSet bool
}

func (v NullableSource) Get() *Source {
	return v.value
}

func (v *NullableSource) Set(val *Source) {
	v.value = val
	v.isSet = true
}

func (v NullableSource) IsSet() bool {
	return v.isSet
}

func (v *NullableSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSource(val *Source) *NullableSource {
	return &NullableSource{value: val, isSet: true}
}

func (v NullableSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


