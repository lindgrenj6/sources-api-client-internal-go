{
  "openapi": "3.0.0",
  "info": {
    "description": "Sources Internal",
    "version": "2.0.0",
    "title": "Sources Internal",
    "contact": {
      "email": "support@redhat.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "security": [
    {
      "UserSecurity": [

      ]
    }
  ],
  "paths": {
    "/authentications/{id}": {
      "get": {
        "summary": "Show an existing Authentication",
        "operationId": "showAuthentication",
        "description": "Returns a Authentication object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authentication"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/sources": {
      "get": {
        "summary": "List Sources",
        "operationId": "listSources",
        "description": "Returns an array of Source objects",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "$ref": "#/components/parameters/QueryFilter"
          },
          {
            "$ref": "#/components/parameters/QuerySortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Sources collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesCollection"
                }
              }
            }
          }
        }
      }
    },
    "/tenants": {
      "get": {
        "summary": "List Tenants",
        "operationId": "listTenants",
        "description": "Returns an array of Tenant objects:",
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryLimit"
          },
          {
            "$ref": "#/components/parameters/QueryOffset"
          },
          {
            "$ref": "#/components/parameters/QueryFilter"
          },
          {
            "$ref": "#/components/parameters/QuerySortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenants collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantsCollection"
                }
              }
            }
          }
        }
      }
    },
    "/tenants/{id}": {
      "get": {
        "summary": "Show an existing Tenant",
        "operationId": "showTenant",
        "description": "Returns a Tenant object",
        "parameters": [
          {
            "$ref": "#/components/parameters/ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:{port}/{basePath}",
      "description": "Development Server",
      "variables": {
        "port": {
          "default": "3000"
        },
        "basePath": {
          "default": "/internal/v2.0"
        }
      }
    }
  ],
  "components": {
    "parameters": {
      "ID": {
        "name": "id",
        "in": "path",
        "description": "ID of the resource",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^\\d+$"
        }
      },
      "QueryFilter": {
        "in": "query",
        "name": "filter",
        "description": "Filter for querying collections.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object"
        }
      },
      "QueryLimit": {
        "in": "query",
        "name": "limit",
        "description": "The numbers of items to return per page.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "default": 100
        }
      },
      "QueryOffset": {
        "in": "query",
        "name": "offset",
        "description": "The number of items to skip before starting to collect the result set.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        }
      },
      "QuerySortBy": {
        "in": "query",
        "name": "sort_by",
        "description": "The list of attribute and order to sort the result set by.",
        "required": false,
        "schema": {
              "$ref": "#/components/schemas/SortByAttribute"
        }
      }
    },
    "securitySchemes": {
      "UserSecurity": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "Authentication": {
        "type": "object",
        "properties": {
          "authtype": {
            "example": "openshift_default",
            "type": "string",
            "readOnly": true
          },
          "availability_status": {
            "type": "string"
          },
          "availability_status_error": {
            "type": "string"
          },
          "extra": {
            "additionalProperties": false,
            "properties": {
              "azure": {
                "additionalProperties": false,
                "properties": {
                  "tenant_id": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "last_available_at": {
            "format": "date-time",
            "type": "string"
          },
          "last_checked_at": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "example": "OpenShift default",
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "resource_id": {
            "$ref": "#/components/schemas/ID"
          },
          "resource_type": {
            "example": "Endpoint",
            "type": "string"
          },
          "source_id": {
            "$ref": "#/components/schemas/ID"
          },
          "username": {
            "example": "user@example.com",
            "type": "string"
          },
          "paused_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CollectionLinks": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "last": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          }
        }
      },
      "CollectionMetadata": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          }
        }
      },
      "ErrorNotFound": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "404"
                },
                "detail": {
                  "type": "string",
                  "example": "Record not found"
                }
              }
            }
          }
        }
      },
      "ID": {
        "type": "string",
        "description": "ID of the resource",
        "pattern": "^\\d+$",
        "readOnly": true
      },
      "SortByAttribute": {
        "type": "string",
        "description": "Attribute with optional order to sort the result set by.",
        "pattern": "^[a-z\\-_]+(:asc|:desc)?$"
      },
      "Source": {
        "type": "object",
        "properties": {
          "app_creation_workflow": {
            "type": "string",
            "enum": [
              "manual_configuration",
              "account_authorization"
            ]
          },
          "availability_status": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "imported": {
            "type": "string"
          },
          "last_available_at": {
            "format": "date-time",
            "type": "string"
          },
          "last_checked_at": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "example": "Sample Provider",
            "title": "Name",
            "type": "string"
          },
          "source_ref": {
            "type": "string"
          },
          "source_type_id": {
            "$ref": "#/components/schemas/ID"
          },
          "uid": {
            "readOnly": true,
            "title": "Unique ID of the inventory source installation",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "example": "6.5.0",
            "readOnly": true,
            "title": "Version",
            "type": "string"
          },
          "paused_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Tenant": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "external_tenant": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SourcesCollection": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/CollectionMetadata"
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Source"
            }
          }
        }
      },
      "TenantsCollection": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/CollectionMetadata"
          },
          "links": {
            "$ref": "#/components/schemas/CollectionLinks"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tenant"
            }
          }
        }
      }
    }
  }
}
